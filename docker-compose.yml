services:
  # Database Service (MySQL)
  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: 'admin'
      MYSQL_DATABASE: 'mydb'
    volumes:
      - db_data:/var/lib/mysql                # Use named volume for persisting MySQL data
      - db_logs:/var/log/mysql                # Use named volume for persisting MySQL logs
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Run SQL script at startup to initialize tables
      - ./my.cnf:/etc/mysql/my.cnf            # Custom MySQL configuration file
    networks:
      - app-network
    restart: unless-stopped

  # Flask Application Service
  app:
    build: ./app
    networks:
      - app-network
    depends_on:
      - db
    environment:
      FLASK_ENV: production
      DATABASE_HOST: db
      DATABASE_USER: root
      DATABASE_PASSWORD: admin
      DATABASE_NAME: mydb
      TZ: Asia/Jerusalem
    volumes:
      - logs:/app/logs                       # Use named volume for persisting application logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    restart: unless-stopped

  # Nginx Load Balancer Service
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - app
    environment:
      - TZ=Asia/Jerusalem
    restart: unless-stopped

# Volume Definitions
volumes:
  db_data:                                     # Named volume for MySQL data
  db_logs:                                     # Named volume for MySQL logs
  logs:                                        # Named volume for application logs

# Network Definition
networks:
  app-network:                                 # Network for communication between services
